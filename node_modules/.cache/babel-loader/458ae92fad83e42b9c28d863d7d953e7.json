{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samth\\\\repomain-1\\\\src\\\\components\\\\Input\\\\EmojiPicker.jsx\",\n  _s = $RefreshSig$();\nimport React, { forwardRef } from \"react\";\nimport \"emoji-picker-element\";\nimport { FaRegKeyboard } from \"react-icons/fa\";\nimport { BsEmojiSmile } from \"react-icons/bs\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { useImperativeHandle } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmojiPicker = /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n  let {\n    setValue\n  } = _ref;\n  const emojiRef = useRef();\n  useImperativeHandle(ref, () => ({\n    close: () => setIsOpen(false)\n  }));\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    const emojiPicker = emojiRef.current;\n    const addEmoji = e => {\n      setValue(value => value + e.detail.unicode);\n    };\n    emojiPicker.addEventListener(\"emoji-click\", addEmoji);\n    return () => {\n      emojiPicker.removeEventListener(\"emoji-click\", addEmoji);\n    };\n  }, [setValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emoji-picker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"opener\",\n      onClick: () => setIsOpen(open => !open),\n      children: isOpen ? /*#__PURE__*/_jsxDEV(FaRegKeyboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(BsEmojiSmile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isOpen ? \"picker open\" : \"picker\",\n      children: /*#__PURE__*/_jsxDEV(\"emoji-picker\", {\n        ref: emojiRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}, \"Vu1JCNBLQ5y7igvZXjd76LERXKI=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = EmojiPicker;\nexport default EmojiPicker;\nvar _c, _c2;\n$RefreshReg$(_c, \"EmojiPicker$forwardRef\");\n$RefreshReg$(_c2, \"EmojiPicker\");","map":{"version":3,"names":["React","forwardRef","FaRegKeyboard","BsEmojiSmile","useEffect","useRef","useState","useImperativeHandle","EmojiPicker","ref","setValue","emojiRef","close","setIsOpen","isOpen","emojiPicker","current","addEmoji","e","value","detail","unicode","addEventListener","removeEventListener","open"],"sources":["C:/Users/samth/repomain-1/src/components/Input/EmojiPicker.jsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport \"emoji-picker-element\";\r\nimport { FaRegKeyboard } from \"react-icons/fa\";\r\nimport { BsEmojiSmile } from \"react-icons/bs\";\r\nimport { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useImperativeHandle } from \"react\";\r\n\r\nconst EmojiPicker = forwardRef(({ setValue }, ref) => {\r\n\tconst emojiRef = useRef();\r\n\r\n\tuseImperativeHandle(ref, () => ({\r\n\t\tclose: () => setIsOpen(false),\r\n\t}));\r\n\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst emojiPicker = emojiRef.current;\r\n\t\tconst addEmoji = e => {\r\n\t\t\tsetValue(value => value + e.detail.unicode);\r\n\t\t};\r\n\t\temojiPicker.addEventListener(\"emoji-click\", addEmoji);\r\n\t\treturn () => {\r\n\t\t\temojiPicker.removeEventListener(\"emoji-click\", addEmoji);\r\n\t\t};\r\n\t}, [setValue]);\r\n\r\n\treturn (\r\n\t\t<div className=\"emoji-picker\">\r\n\t\t\t<div className=\"opener\" onClick={() => setIsOpen(open => !open)}>\r\n\t\t\t\t{isOpen ? <FaRegKeyboard /> : <BsEmojiSmile />}\r\n\t\t\t</div>\r\n\t\t\t<div className={isOpen ? \"picker open\" : \"picker\"}>\r\n\t\t\t\t<emoji-picker ref={emojiRef} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nexport default EmojiPicker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAO,sBAAsB;AAC7B,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,mBAAmB,QAAQ,OAAO;AAAC;AAE5C,MAAMC,WAAW,gBAAGP,UAAU,SAAC,OAAeQ,GAAG,KAAK;EAAA;EAAA,IAAtB;IAAEC;EAAS,CAAC;EAC3C,MAAMC,QAAQ,GAAGN,MAAM,EAAE;EAEzBE,mBAAmB,CAACE,GAAG,EAAE,OAAO;IAC/BG,KAAK,EAAE,MAAMC,SAAS,CAAC,KAAK;EAC7B,CAAC,CAAC,CAAC;EAEH,MAAM,CAACC,MAAM,EAAED,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3CF,SAAS,CAAC,MAAM;IACf,MAAMW,WAAW,GAAGJ,QAAQ,CAACK,OAAO;IACpC,MAAMC,QAAQ,GAAGC,CAAC,IAAI;MACrBR,QAAQ,CAACS,KAAK,IAAIA,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACC,OAAO,CAAC;IAC5C,CAAC;IACDN,WAAW,CAACO,gBAAgB,CAAC,aAAa,EAAEL,QAAQ,CAAC;IACrD,OAAO,MAAM;MACZF,WAAW,CAACQ,mBAAmB,CAAC,aAAa,EAAEN,QAAQ,CAAC;IACzD,CAAC;EACF,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,oBACC;IAAK,SAAS,EAAC,cAAc;IAAA,wBAC5B;MAAK,SAAS,EAAC,QAAQ;MAAC,OAAO,EAAE,MAAMG,SAAS,CAACW,IAAI,IAAI,CAACA,IAAI,CAAE;MAAA,UAC9DV,MAAM,gBAAG,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA,QAAG,gBAAG,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACzC,eACN;MAAK,SAAS,EAAEA,MAAM,GAAG,aAAa,GAAG,QAAS;MAAA,uBACjD;QAAc,GAAG,EAAEH;MAAS;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC1B;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAER,CAAC;EAAA,QA3BAJ,mBAAmB;AAAA,GA2BlB;AAAC,MA9BGC,WAAW;AAgCjB,eAAeA,WAAW;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}