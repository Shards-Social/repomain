{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samth\\\\repomain-1\\\\src\\\\components\\\\InfinityScroll\\\\InfinityScroll.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfinityScroll = _ref => {\n  _s();\n  let {\n    getNextPage,\n    children,\n    offset = 10\n  } = _ref;\n  const contentRef = useRef();\n  const [isFinished, setIsFinished] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const handler = useCallback(async () => {\n    const content = contentRef.current;\n    if (!content) return;\n    const {\n      height,\n      top\n    } = content.getBoundingClientRect();\n    const remainingSpaceAtBottom = window.innerHeight + top * -1 - height;\n    const isReachedBottom = remainingSpaceAtBottom > offset;\n    if (isReachedBottom && !isFinished && !isLoading) {\n      setIsLoading(true);\n      const length = await getNextPage();\n      if (!length) setIsFinished(true);\n      setIsLoading(false);\n    }\n  }, [isLoading, isFinished, offset, getNextPage]);\n  useEffect(() => {\n    document.addEventListener(\"scroll\", handler);\n    return () => document.removeEventListener(\"scroll\", handler);\n  }, [handler]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"infinityScroll\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infinityScroll__content\",\n      ref: contentRef,\n      children: [children, !isFinished && isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading__circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n_s(InfinityScroll, \"smjng39BNLKoyBmQUOmK4Sov21I=\");\n_c = InfinityScroll;\nexport default InfinityScroll;\nvar _c;\n$RefreshReg$(_c, \"InfinityScroll\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","useRef","InfinityScroll","getNextPage","children","offset","contentRef","isFinished","setIsFinished","isLoading","setIsLoading","handler","content","current","height","top","getBoundingClientRect","remainingSpaceAtBottom","window","innerHeight","isReachedBottom","length","document","addEventListener","removeEventListener"],"sources":["C:/Users/samth/repomain-1/src/components/InfinityScroll/InfinityScroll.jsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nconst InfinityScroll = ({ getNextPage, children, offset = 10 }) => {\r\n\tconst contentRef = useRef();\r\n\tconst [isFinished, setIsFinished] = useState(false);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst handler = useCallback(async () => {\r\n\t\tconst content = contentRef.current;\r\n\t\tif (!content) return;\r\n\t\tconst { height, top } = content.getBoundingClientRect();\r\n\t\tconst remainingSpaceAtBottom = window.innerHeight + top * -1 - height;\r\n\t\tconst isReachedBottom = remainingSpaceAtBottom > offset;\r\n\t\tif (isReachedBottom && !isFinished && !isLoading) {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst length = await getNextPage();\r\n\t\t\tif (!length) setIsFinished(true);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t}, [isLoading, isFinished, offset, getNextPage]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener(\"scroll\", handler);\r\n\t\treturn () => document.removeEventListener(\"scroll\", handler);\r\n\t}, [handler]);\r\n\r\n\treturn (\r\n\t\t<div className=\"infinityScroll\">\r\n\t\t\t<div className=\"infinityScroll__content\" ref={contentRef}>\r\n\t\t\t\t{children}\r\n\t\t\t\t{!isFinished && isLoading && <div className=\"loading__circle\" />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InfinityScroll;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,QAAQ,OAAO;AAAC;AAE/B,MAAMC,cAAc,GAAG,QAA4C;EAAA;EAAA,IAA3C;IAAEC,WAAW;IAAEC,QAAQ;IAAEC,MAAM,GAAG;EAAG,CAAC;EAC7D,MAAMC,UAAU,GAAGL,MAAM,EAAE;EAC3B,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,OAAO,GAAGb,WAAW,CAAC,YAAY;IACvC,MAAMc,OAAO,GAAGN,UAAU,CAACO,OAAO;IAClC,IAAI,CAACD,OAAO,EAAE;IACd,MAAM;MAAEE,MAAM;MAAEC;IAAI,CAAC,GAAGH,OAAO,CAACI,qBAAqB,EAAE;IACvD,MAAMC,sBAAsB,GAAGC,MAAM,CAACC,WAAW,GAAGJ,GAAG,GAAG,CAAC,CAAC,GAAGD,MAAM;IACrE,MAAMM,eAAe,GAAGH,sBAAsB,GAAGZ,MAAM;IACvD,IAAIe,eAAe,IAAI,CAACb,UAAU,IAAI,CAACE,SAAS,EAAE;MACjDC,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMW,MAAM,GAAG,MAAMlB,WAAW,EAAE;MAClC,IAAI,CAACkB,MAAM,EAAEb,aAAa,CAAC,IAAI,CAAC;MAChCE,YAAY,CAAC,KAAK,CAAC;IACpB;EACD,CAAC,EAAE,CAACD,SAAS,EAAEF,UAAU,EAAEF,MAAM,EAAEF,WAAW,CAAC,CAAC;EAEhDH,SAAS,CAAC,MAAM;IACfsB,QAAQ,CAACC,gBAAgB,CAAC,QAAQ,EAAEZ,OAAO,CAAC;IAC5C,OAAO,MAAMW,QAAQ,CAACE,mBAAmB,CAAC,QAAQ,EAAEb,OAAO,CAAC;EAC7D,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,oBACC;IAAK,SAAS,EAAC,gBAAgB;IAAA,uBAC9B;MAAK,SAAS,EAAC,yBAAyB;MAAC,GAAG,EAAEL,UAAW;MAAA,WACvDF,QAAQ,EACR,CAACG,UAAU,IAAIE,SAAS,iBAAI;QAAK,SAAS,EAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAC3D;IAAA;IAAA;IAAA;EAAA,QACD;AAER,CAAC;AAAC,GAhCIP,cAAc;AAAA,KAAdA,cAAc;AAkCpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module"}