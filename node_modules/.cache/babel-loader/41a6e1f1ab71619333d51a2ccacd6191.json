{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { showModal } from \"../features/modalSlice\";\nconst useFetch = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  return useCallback(async function (callback) {\n    try {\n      for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        props[_key - 1] = arguments[_key];\n      }\n      return await callback(...props);\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) navigate(\"/not-found\");\n      const msg = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.msg) || \"Something went wrong\";\n      dispatch(showModal({\n        msg\n      }));\n    }\n  },\n  //if I add navigate here, it will be re-rendered every time\n  //eslint-disable-next-line\n  [dispatch]);\n};\n_s(useFetch, \"1gagpqChvDFnMEFeTcuxSlo8ipo=\", false, function () {\n  return [useDispatch, useNavigate];\n});\nexport default useFetch;","map":{"version":3,"names":["useCallback","useDispatch","useNavigate","showModal","useFetch","dispatch","navigate","callback","props","error","response","status","msg","data"],"sources":["C:/Users/samth/repomain-1/src/hooks/useFetch.js"],"sourcesContent":["import { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { showModal } from \"../features/modalSlice\";\r\n\r\nconst useFetch = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst navigate = useNavigate();\r\n\treturn useCallback(\r\n\t\tasync (callback, ...props) => {\r\n\t\t\ttry {\r\n\t\t\t\treturn await callback(...props);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tif (error.response?.status === 404) navigate(\"/not-found\");\r\n\t\t\t\tconst msg = error.response?.data?.msg || \"Something went wrong\";\r\n\t\t\t\tdispatch(showModal({ msg }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t//if I add navigate here, it will be re-rendered every time\r\n\t\t//eslint-disable-next-line\r\n\t\t[dispatch]\r\n\t);\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,wBAAwB;AAElD,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACtB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAMK,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,OAAOF,WAAW,CACjB,gBAAOO,QAAQ,EAAe;IAC7B,IAAI;MAAA,kCADeC,KAAK;QAALA,KAAK;MAAA;MAEvB,OAAO,MAAMD,QAAQ,CAAC,GAAGC,KAAK,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA;MACf,IAAI,oBAAAA,KAAK,CAACC,QAAQ,oDAAd,gBAAgBC,MAAM,MAAK,GAAG,EAAEL,QAAQ,CAAC,YAAY,CAAC;MAC1D,MAAMM,GAAG,GAAG,qBAAAH,KAAK,CAACC,QAAQ,8EAAd,iBAAgBG,IAAI,0DAApB,sBAAsBD,GAAG,KAAI,sBAAsB;MAC/DP,QAAQ,CAACF,SAAS,CAAC;QAAES;MAAI,CAAC,CAAC,CAAC;IAC7B;EACD,CAAC;EACD;EACA;EACA,CAACP,QAAQ,CAAC,CACV;AACF,CAAC;AAAC,GAjBID,QAAQ;EAAA,QACIH,WAAW,EACXC,WAAW;AAAA;AAiB7B,eAAeE,QAAQ"},"metadata":{},"sourceType":"module"}