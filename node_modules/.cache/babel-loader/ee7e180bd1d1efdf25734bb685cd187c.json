{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samth\\\\repomain-1\\\\src\\\\components\\\\Register\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setIsLoading } from \"../../features/modalSlice\";\nimport { login } from \"../../features/userSlice\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { registerService } from \"../../services/authServices\";\nimport DataList from \"../DataList/DataList\";\nimport './Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialForm = {\n  name: \"\",\n  password: \"\",\n  email: \"\",\n  dob: \"\"\n};\nconst Register = _ref => {\n  _s();\n  let {\n    setIsRegistering\n  } = _ref;\n  const [form, setForm] = useState(initialForm);\n  const dispatch = useDispatch();\n  const customFetch = useFetch();\n  const registerHandler = async e => {\n    e.preventDefault();\n    dispatch(setIsLoading(true));\n    const data = await customFetch(registerService, form);\n    if (data) dispatch(login(data));\n    dispatch(setIsLoading(false));\n  };\n  const updateForm = (key, e) => {\n    setForm(form => ({\n      ...form,\n      [key]: e.target.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: registerHandler,\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        placeholder: \"johndoe@example.com\",\n        value: form.email,\n        required: true,\n        onChange: e => updateForm(\"email\", e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DataList, {\n        email: form.email,\n        setEmail: value => setForm(form => ({\n          ...form,\n          email: value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      placeholder: \"john doe\",\n      value: form.name,\n      required: true,\n      onChange: e => updateForm(\"name\", e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"dob\",\n      children: \"Date of birth\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"dob\",\n      required: true,\n      value: form.dob,\n      onChange: e => updateForm(\"dob\", e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      placeholder: \"Top secret\",\n      required: true,\n      value: form.password,\n      onChange: e => updateForm(\"password\", e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setIsRegistering(false),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n_s(Register, \"XCoLRnnYawcIyZc6jwy6O5N4HLk=\", false, function () {\n  return [useDispatch, useFetch];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useDispatch","setIsLoading","login","useFetch","registerService","DataList","initialForm","name","password","email","dob","Register","setIsRegistering","form","setForm","dispatch","customFetch","registerHandler","e","preventDefault","data","updateForm","key","target","value"],"sources":["C:/Users/samth/repomain-1/src/components/Register/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setIsLoading } from \"../../features/modalSlice\";\r\nimport { login } from \"../../features/userSlice\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { registerService } from \"../../services/authServices\";\r\nimport DataList from \"../DataList/DataList\";\r\nimport './Register.css';\r\n\r\nconst initialForm = { name: \"\", password: \"\", email: \"\", dob: \"\" };\r\n\r\nconst Register = ({ setIsRegistering }) => {\r\n\tconst [form, setForm] = useState(initialForm);\r\n\tconst dispatch = useDispatch();\r\n\tconst customFetch = useFetch();\r\n\r\n\tconst registerHandler = async e => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(setIsLoading(true));\r\n\t\tconst data = await customFetch(registerService, form);\r\n\t\tif (data) dispatch(login(data));\r\n\t\tdispatch(setIsLoading(false));\r\n\t};\r\n\r\n\tconst updateForm = (key, e) => {\r\n\t\tsetForm(form => ({ ...form, [key]: e.target.value }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={registerHandler} className=\"register\">\r\n\t\t\t<div className=\"email\">\r\n\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\tplaceholder=\"johndoe@example.com\"\r\n\t\t\t\t\tvalue={form.email}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tonChange={e => updateForm(\"email\", e)}\r\n\t\t\t\t/>\r\n\t\t\t\t<DataList email={form.email} setEmail={value => setForm(form => ({ ...form, email: value }))} />\r\n\t\t\t</div>\r\n\t\t\t<label htmlFor=\"name\">Username</label>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tid=\"name\"\r\n\t\t\t\tplaceholder=\"john doe\"\r\n\t\t\t\tvalue={form.name}\r\n\t\t\t\trequired\r\n\t\t\t\tonChange={e => updateForm(\"name\", e)}\r\n\t\t\t/>\r\n\t\t\t<label htmlFor=\"dob\">Date of birth</label>\r\n\t\t\t<input type=\"date\" id=\"dob\" required value={form.dob} onChange={e => updateForm(\"dob\", e)} />\r\n\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tid=\"password\"\r\n\t\t\t\tplaceholder=\"Top secret\"\r\n\t\t\t\trequired\r\n\t\t\t\tvalue={form.password}\r\n\t\t\t\tonChange={e => updateForm(\"password\", e)}\r\n\t\t\t/>\r\n\t\t\t<button type=\"submit\">Register</button>\r\n\t\t\t<p>\r\n\t\t\t\tAlready have an account? <span onClick={() => setIsRegistering(false)}>Login</span>\r\n\t\t\t</p>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}