{"ast":null,"code":"import extractParams from \"../utils/extractParams\";\nimport axiosConfig from \"./axiosConfig\";\nconst createPostService = async function () {\n  let formData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headers = {\n    \"Content-Type\": \"multipart/form-data\"\n  };\n  const {\n    data\n  } = await axiosConfig.post(\"/posts\", formData, {\n    headers\n  });\n  return data;\n};\nconst fetchPostsService = async function () {\n  let formData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const params = extractParams(formData, \"id\", \"query\", \"page\", \"userId\");\n  const {\n    data\n  } = await axiosConfig.get(\"/posts\", {\n    params\n  });\n  return data;\n};\nconst likePostService = async function () {\n  let formData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const params = extractParams(formData, \"id\", \"add\");\n  const {\n    data\n  } = await axiosConfig.patch(\"/posts/like\", params);\n  return data;\n};\nconst commentPostService = async function () {\n  let formData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const params = extractParams(formData, \"id\", \"comment\");\n  const {\n    data\n  } = await axiosConfig.post(\"/posts/comment\", params);\n  return data;\n};\nconst deleteCommentService = async function () {\n  let formData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const params = extractParams(formData, \"postId\", \"commentId\", \"replyId\");\n  const {\n    data\n  } = await axiosConfig.delete(`/posts/comment`, {\n    params\n  });\n  return data;\n};\nconst editCommentService = async function () {\n  let formData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const params = extractParams(formData, \"postId\", \"commentId\", \"comment\", \"replyId\");\n  const {\n    data\n  } = await axiosConfig.patch(`/posts/comment`, params);\n  return data;\n};\nconst replyCommentService = async function () {\n  let formData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const params = extractParams(formData, \"id\", \"commentId\", \"comment\", \"replyTo\");\n  const {\n    data\n  } = await axiosConfig.post(\"/posts/comment\", params);\n  return data;\n};\nconst deletePostService = async function () {\n  let formData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    id\n  } = formData;\n  const {\n    data\n  } = await axiosConfig.delete(`/posts/${id}`);\n  return data;\n};\nconst updatePostService = async function () {\n  let formData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    id,\n    form\n  } = formData;\n  const {\n    data\n  } = await axiosConfig.patch(`/posts/${id}`, form);\n  return data;\n};\nexport { fetchPostsService, createPostService, likePostService, commentPostService, deletePostService, updatePostService, deleteCommentService, editCommentService, replyCommentService };","map":{"version":3,"names":["extractParams","axiosConfig","createPostService","formData","headers","data","post","fetchPostsService","params","get","likePostService","patch","commentPostService","deleteCommentService","delete","editCommentService","replyCommentService","deletePostService","id","updatePostService","form"],"sources":["C:/Users/samth/repomain-1/src/services/postServices.js"],"sourcesContent":["import extractParams from \"../utils/extractParams\";\r\nimport axiosConfig from \"./axiosConfig\";\r\n\r\nconst createPostService = async (formData = {}) => {\r\n\tconst headers = { \"Content-Type\": \"multipart/form-data\" };\r\n\tconst { data } = await axiosConfig.post(\"/posts\", formData, { headers });\r\n\treturn data;\r\n};\r\n\r\nconst fetchPostsService = async (formData = {}) => {\r\n\tconst params = extractParams(formData, \"id\", \"query\", \"page\", \"userId\");\r\n\tconst { data } = await axiosConfig.get(\"/posts\", { params });\r\n\treturn data;\r\n};\r\n\r\nconst likePostService = async (formData = {}) => {\r\n\tconst params = extractParams(formData, \"id\", \"add\");\r\n\tconst { data } = await axiosConfig.patch(\"/posts/like\", params);\r\n\treturn data;\r\n};\r\n\r\nconst commentPostService = async (formData = {}) => {\r\n\tconst params = extractParams(formData, \"id\", \"comment\");\r\n\tconst { data } = await axiosConfig.post(\"/posts/comment\", params);\r\n\treturn data;\r\n};\r\n\r\nconst deleteCommentService = async (formData = {}) => {\r\n\tconst params = extractParams(formData, \"postId\", \"commentId\", \"replyId\");\r\n\tconst { data } = await axiosConfig.delete(`/posts/comment`, { params });\r\n\treturn data;\r\n};\r\n\r\nconst editCommentService = async (formData = {}) => {\r\n\tconst params = extractParams(formData, \"postId\", \"commentId\", \"comment\", \"replyId\");\r\n\tconst { data } = await axiosConfig.patch(`/posts/comment`, params);\r\n\treturn data;\r\n};\r\n\r\nconst replyCommentService = async (formData = {}) => {\r\n\tconst params = extractParams(formData, \"id\", \"commentId\", \"comment\", \"replyTo\");\r\n\tconst { data } = await axiosConfig.post(\"/posts/comment\", params);\r\n\treturn data;\r\n};\r\n\r\nconst deletePostService = async (formData = {}) => {\r\n\tconst { id } = formData;\r\n\tconst { data } = await axiosConfig.delete(`/posts/${id}`);\r\n\treturn data;\r\n};\r\n\r\nconst updatePostService = async (formData = {}) => {\r\n\tconst { id, form } = formData;\r\n\tconst { data } = await axiosConfig.patch(`/posts/${id}`, form);\r\n\treturn data;\r\n};\r\n\r\nexport {\r\n\tfetchPostsService,\r\n\tcreatePostService,\r\n\tlikePostService,\r\n\tcommentPostService,\r\n\tdeletePostService,\r\n\tupdatePostService,\r\n\tdeleteCommentService,\r\n\teditCommentService,\r\n\treplyCommentService,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}