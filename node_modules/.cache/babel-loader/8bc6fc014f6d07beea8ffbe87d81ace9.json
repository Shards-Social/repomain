{"ast":null,"code":"const size = base64 => {\n  const len = base64.replace(/^data:image\\/\\w+;base64,/, \"\").length;\n  return (len - 814) / 1.37;\n  // return len * 3 / 4\n};\n\n// strip off the data: url prefix to get just the base64-encoded bytes\n// var data = img.replace(/^data:image\\/\\w+;base64,/, \"\");\nconst mime = base64 => {\n  return base64.split(\";\")[0].match(/jpeg|png|gif/)[0];\n};\nconst data = base64 => {\n  return base64.replace(/^data:image\\/\\w+;base64,/, \"\");\n};\nconst prefix = ext => {\n  return `data:${ext};base64,`;\n};\nexport default {\n  size,\n  mime,\n  data,\n  prefix\n};","map":{"version":3,"names":["size","base64","len","replace","length","mime","split","match","data","prefix","ext"],"sources":["C:/Users/samth/repomain-1/node_modules/compress.js/src/core/base64.js"],"sourcesContent":["const size = (base64) => {\n  const len = base64.replace(/^data:image\\/\\w+;base64,/, \"\").length;\n  return (len - 814) / 1.37;\n  // return len * 3 / 4\n};\n\n// strip off the data: url prefix to get just the base64-encoded bytes\n// var data = img.replace(/^data:image\\/\\w+;base64,/, \"\");\nconst mime = (base64) => {\n  return base64.split(\";\")[0].match(/jpeg|png|gif/)[0];\n};\n\nconst data = (base64) => {\n  return base64.replace(/^data:image\\/\\w+;base64,/, \"\");\n};\n\nconst prefix = (ext) => {\n  return `data:${ext};base64,`;\n};\n\nexport default { size, mime, data, prefix };\n"],"mappings":"AAAA,MAAMA,IAAI,GAAIC,MAAM,IAAK;EACvB,MAAMC,GAAG,GAAGD,MAAM,CAACE,OAAO,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAACC,MAAM;EACjE,OAAO,CAACF,GAAG,GAAG,GAAG,IAAI,IAAI;EACzB;AACF,CAAC;;AAED;AACA;AACA,MAAMG,IAAI,GAAIJ,MAAM,IAAK;EACvB,OAAOA,MAAM,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC;AAED,MAAMC,IAAI,GAAIP,MAAM,IAAK;EACvB,OAAOA,MAAM,CAACE,OAAO,CAAC,0BAA0B,EAAE,EAAE,CAAC;AACvD,CAAC;AAED,MAAMM,MAAM,GAAIC,GAAG,IAAK;EACtB,OAAQ,QAAOA,GAAI,UAAS;AAC9B,CAAC;AAED,eAAe;EAAEV,IAAI;EAAEK,IAAI;EAAEG,IAAI;EAAEC;AAAO,CAAC"},"metadata":{},"sourceType":"module"}