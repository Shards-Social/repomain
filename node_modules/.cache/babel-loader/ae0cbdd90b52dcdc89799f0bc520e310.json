{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samth\\\\repomain-1\\\\src\\\\components\\\\SingleChat\\\\SingleChat.jsx\";\nimport React from \"react\";\nimport getDateString from \"../../utils/getDateString\";\nimport \"./singlechat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingleChat = _ref => {\n  var _messages, _messages2;\n  let {\n    message,\n    index,\n    messages\n  } = _ref;\n  const today = new Date();\n  const createdAt = new Date(message.createdAt);\n  const prevMessageDate = messages[index - 1] && new Date((_messages = messages[index - 1]) === null || _messages === void 0 ? void 0 : _messages.createdAt);\n  const diff = today.getDate() - createdAt.getDate();\n  const formattedDate = getDateString(createdAt);\n  const date = diff === 1 ? \"YESTERDAY\" : diff === 0 ? \"TODAY\" : formattedDate;\n  const showDate = prevMessageDate ? createdAt.getDate() - prevMessageDate.getDate() > 0 ? true : false : true;\n  const getTime = () => {\n    return `${createdAt.getHours()}:${createdAt.getMinutes() > 9 ? createdAt.getMinutes() : \"0\" + createdAt.getMinutes()}`;\n  };\n  const isEmoji = message.text.length === 2 && !message.text.match(/\\w/);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showDate && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: message.send ? \"chat__sent\" : \"chat__recieve\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: isEmoji ? \"emoji message\" : \"message\",\n        children: [message.text, ((_messages2 = messages[index + 1]) === null || _messages2 === void 0 ? void 0 : _messages2.send) !== message.send && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: getTime()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_c = SingleChat;\nexport default SingleChat;\nvar _c;\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"names":["React","getDateString","SingleChat","message","index","messages","today","Date","createdAt","prevMessageDate","diff","getDate","formattedDate","date","showDate","getTime","getHours","getMinutes","isEmoji","text","length","match","send"],"sources":["C:/Users/samth/repomain-1/src/components/SingleChat/SingleChat.jsx"],"sourcesContent":["import React from \"react\";\r\nimport getDateString from \"../../utils/getDateString\";\r\nimport \"./singlechat.css\";\r\n\r\nconst SingleChat = ({ message, index, messages }) => {\r\n\tconst today = new Date();\r\n\tconst createdAt = new Date(message.createdAt);\r\n\tconst prevMessageDate = messages[index - 1] && new Date(messages[index - 1]?.createdAt);\r\n\tconst diff = today.getDate() - createdAt.getDate();\r\n\tconst formattedDate = getDateString(createdAt);\r\n\r\n\tconst date = diff === 1 ? \"YESTERDAY\" : diff === 0 ? \"TODAY\" : formattedDate;\r\n\tconst showDate = prevMessageDate\r\n\t\t? createdAt.getDate() - prevMessageDate.getDate() > 0\r\n\t\t\t? true\r\n\t\t\t: false\r\n\t\t: true;\r\n\r\n\tconst getTime = () => {\r\n\t\treturn `${createdAt.getHours()}:${\r\n\t\t\tcreatedAt.getMinutes() > 9 ? createdAt.getMinutes() : \"0\" + createdAt.getMinutes()\r\n\t\t}`;\r\n\t};\r\n\r\n\tconst isEmoji = message.text.length === 2 && !message.text.match(/\\w/);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{showDate && <h4>{date}</h4>}\r\n\t\t\t<div className={message.send ? \"chat__sent\" : \"chat__recieve\"}>\r\n\t\t\t\t<p className={isEmoji ? \"emoji message\" : \"message\"}>\r\n\t\t\t\t\t{message.text}\r\n\t\t\t\t\t{messages[index + 1]?.send !== message.send && <span className=\"time\">{getTime()}</span>}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SingleChat;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAO,kBAAkB;AAAC;AAAA;AAE1B,MAAMC,UAAU,GAAG,QAAkC;EAAA;EAAA,IAAjC;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAS,CAAC;EAC/C,MAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;EACxB,MAAMC,SAAS,GAAG,IAAID,IAAI,CAACJ,OAAO,CAACK,SAAS,CAAC;EAC7C,MAAMC,eAAe,GAAGJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC,IAAI,IAAIG,IAAI,cAACF,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC,8CAAnB,UAAqBI,SAAS,CAAC;EACvF,MAAME,IAAI,GAAGJ,KAAK,CAACK,OAAO,EAAE,GAAGH,SAAS,CAACG,OAAO,EAAE;EAClD,MAAMC,aAAa,GAAGX,aAAa,CAACO,SAAS,CAAC;EAE9C,MAAMK,IAAI,GAAGH,IAAI,KAAK,CAAC,GAAG,WAAW,GAAGA,IAAI,KAAK,CAAC,GAAG,OAAO,GAAGE,aAAa;EAC5E,MAAME,QAAQ,GAAGL,eAAe,GAC7BD,SAAS,CAACG,OAAO,EAAE,GAAGF,eAAe,CAACE,OAAO,EAAE,GAAG,CAAC,GAClD,IAAI,GACJ,KAAK,GACN,IAAI;EAEP,MAAMI,OAAO,GAAG,MAAM;IACrB,OAAQ,GAAEP,SAAS,CAACQ,QAAQ,EAAG,IAC9BR,SAAS,CAACS,UAAU,EAAE,GAAG,CAAC,GAAGT,SAAS,CAACS,UAAU,EAAE,GAAG,GAAG,GAAGT,SAAS,CAACS,UAAU,EAChF,EAAC;EACH,CAAC;EAED,MAAMC,OAAO,GAAGf,OAAO,CAACgB,IAAI,CAACC,MAAM,KAAK,CAAC,IAAI,CAACjB,OAAO,CAACgB,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;EACtE,oBACC;IAAA,WACEP,QAAQ,iBAAI;MAAA,UAAKD;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eAC5B;MAAK,SAAS,EAAEV,OAAO,CAACmB,IAAI,GAAG,YAAY,GAAG,eAAgB;MAAA,uBAC7D;QAAG,SAAS,EAAEJ,OAAO,GAAG,eAAe,GAAG,SAAU;QAAA,WAClDf,OAAO,CAACgB,IAAI,EACZ,eAAAd,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC,+CAAnB,WAAqBkB,IAAI,MAAKnB,OAAO,CAACmB,IAAI,iBAAI;UAAM,SAAS,EAAC,MAAM;UAAA,UAAEP,OAAO;QAAE;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA;IACrF;MAAA;MAAA;MAAA;IAAA,QACC;EAAA,gBACJ;AAEL,CAAC;AAAC,KAhCIb,UAAU;AAkChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}