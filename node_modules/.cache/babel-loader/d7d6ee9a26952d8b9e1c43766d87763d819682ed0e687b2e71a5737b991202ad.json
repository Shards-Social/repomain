{"ast":null,"code":"// Support regenerator-runtime globally.\n\nimport Base64 from \"./core/base64.js\";\nimport Converter from \"./core/converter.js\";\nimport File from \"./core/file.js\";\nimport Image from \"./core/image.js\";\nimport Photo from \"./core/photo.js\";\nimport Rotate from \"./core/rotate.js\";\n\n// Supported input formats\n// image/png, image/jpeg, image/jpg, image/gif, image/bmp, image/tiff, image/x-icon,  image/svg+xml, image/webp, image/xxx\n// image/png, image/jpeg, image/webp\nexport default class Compress {\n  attach(el, options) {\n    return new Promise(resolve => {\n      const input = document.querySelector(el);\n      input.setAttribute(\"accept\", \"image/*\");\n      input.addEventListener(\"change\", evt => {\n        const output = this.compress([...evt.target.files], options);\n        resolve(output);\n      }, false);\n    });\n  }\n  compress(files, options) {\n    return Promise.all(files.map(file => compressFile(file, options)));\n  }\n  static convertBase64ToFile(base64, mime) {\n    return Converter.base64ToFile(base64, mime);\n  }\n}\nfunction loopCompression(canvas, size) {\n  let quality = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let targetSize = arguments.length > 3 ? arguments[3] : undefined;\n  let targetQuality = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  let iterations = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  const base64str = Converter.canvasToBase64(canvas, quality);\n  const newSize = Base64.size(base64str);\n  return newSize > targetSize || quality > targetQuality ? loopCompression(canvas, newSize, quality - 0.1, targetSize, targetQuality, iterations + 1) : base64str;\n}\nasync function compressFile(file, options) {\n  // Create a new photo object\n  const photo = new Photo(options);\n  photo.start = window.performance.now();\n  photo.alt = file.name;\n  photo.ext = file.type;\n  photo.startSize = file.size;\n  photo.orientation = photo.rotate ? await Rotate.orientation(file) : 0;\n  return compressImage(photo)(await File.load(file));\n}\nfunction compressImage(photo) {\n  return async src => {\n    const img = await Image.load(src);\n    // Store the initial dimensions\n    photo.startWidth = img.naturalWidth;\n    photo.startHeight = img.naturalHeight;\n\n    // Resize the image\n    if (photo.resize) {\n      const {\n        width,\n        height\n      } = Image.resize(photo.maxWidth, photo.maxHeight)(img.naturalWidth, img.naturalHeight);\n      photo.endWidth = width;\n      photo.endHeight = height;\n    } else {\n      photo.endWidth = img.naturalWidth;\n      photo.endHeight = img.naturalHeight;\n    }\n    const canvas = Converter.imageToCanvas(photo.endWidth, photo.endHeight, photo.orientation)(img);\n    photo.iterations = 1;\n    photo.base64prefix = Base64.prefix(photo.ext);\n    const base64 = await loopCompression(canvas, photo.startSize, photo.quality, photo.size, photo.minQuality, photo.iterations);\n    photo.finalSize = Base64.size(base64);\n    photo.end = window.performance.now();\n    const difference = photo.end - photo.start; // in ms\n\n    return {\n      data: Base64.data(base64),\n      prefix: photo.base64prefix,\n      elapsedTimeInSeconds: difference / 1000,\n      // in seconds\n      alt: photo.alt,\n      initialSizeInMb: Converter.size(photo.startSize).MB,\n      endSizeInMb: Converter.size(photo.finalSize).MB,\n      ext: photo.ext,\n      quality: photo.quality,\n      endWidthInPx: photo.endWidth,\n      endHeightInPx: photo.endHeight,\n      initialWidthInPx: photo.startWidth,\n      initialHeightInPx: photo.startHeight,\n      sizeReducedInPercent: (photo.startSize - photo.finalSize) / photo.startSize * 100,\n      iterations: photo.iterations\n    };\n  };\n}","map":{"version":3,"names":["Base64","Converter","File","Image","Photo","Rotate","Compress","attach","el","options","Promise","resolve","input","document","querySelector","setAttribute","addEventListener","evt","output","compress","target","files","all","map","file","compressFile","convertBase64ToFile","base64","mime","base64ToFile","loopCompression","canvas","size","quality","arguments","length","undefined","targetSize","targetQuality","iterations","base64str","canvasToBase64","newSize","photo","start","window","performance","now","alt","name","ext","type","startSize","orientation","rotate","compressImage","load","src","img","startWidth","naturalWidth","startHeight","naturalHeight","resize","width","height","maxWidth","maxHeight","endWidth","endHeight","imageToCanvas","base64prefix","prefix","minQuality","finalSize","end","difference","data","elapsedTimeInSeconds","initialSizeInMb","MB","endSizeInMb","endWidthInPx","endHeightInPx","initialWidthInPx","initialHeightInPx","sizeReducedInPercent"],"sources":["C:/Users/samth/repomain-1/node_modules/compress.js/src/index.js"],"sourcesContent":["// Support regenerator-runtime globally.\nimport \"regenerator-runtime/runtime.js\";\n\nimport Base64 from \"./core/base64.js\";\nimport Converter from \"./core/converter.js\";\nimport File from \"./core/file.js\";\nimport Image from \"./core/image.js\";\nimport Photo from \"./core/photo.js\";\nimport Rotate from \"./core/rotate.js\";\n\n// Supported input formats\n// image/png, image/jpeg, image/jpg, image/gif, image/bmp, image/tiff, image/x-icon,  image/svg+xml, image/webp, image/xxx\n// image/png, image/jpeg, image/webp\nexport default class Compress {\n  attach(el, options) {\n    return new Promise((resolve) => {\n      const input = document.querySelector(el);\n      input.setAttribute(\"accept\", \"image/*\");\n      input.addEventListener(\n        \"change\",\n        (evt) => {\n          const output = this.compress([...evt.target.files], options);\n          resolve(output);\n        },\n        false\n      );\n    });\n  }\n\n  compress(files, options) {\n    return Promise.all(files.map((file) => compressFile(file, options)));\n  }\n\n  static convertBase64ToFile(base64, mime) {\n    return Converter.base64ToFile(base64, mime);\n  }\n}\n\nfunction loopCompression(\n  canvas,\n  size,\n  quality = 1,\n  targetSize,\n  targetQuality = 1,\n  iterations = 1\n) {\n  const base64str = Converter.canvasToBase64(canvas, quality);\n  const newSize = Base64.size(base64str);\n\n  return newSize > targetSize || quality > targetQuality\n    ? loopCompression(\n        canvas,\n        newSize,\n        quality - 0.1,\n        targetSize,\n        targetQuality,\n        iterations + 1\n      )\n    : base64str;\n}\n\nasync function compressFile(file, options) {\n  // Create a new photo object\n  const photo = new Photo(options);\n  photo.start = window.performance.now();\n  photo.alt = file.name;\n  photo.ext = file.type;\n  photo.startSize = file.size;\n  photo.orientation = photo.rotate ? await Rotate.orientation(file) : 0;\n\n  return compressImage(photo)(await File.load(file));\n}\n\nfunction compressImage(photo) {\n  return async (src) => {\n    const img = await Image.load(src);\n    // Store the initial dimensions\n    photo.startWidth = img.naturalWidth;\n    photo.startHeight = img.naturalHeight;\n\n    // Resize the image\n    if (photo.resize) {\n      const { width, height } = Image.resize(photo.maxWidth, photo.maxHeight)(\n        img.naturalWidth,\n        img.naturalHeight\n      );\n      photo.endWidth = width;\n      photo.endHeight = height;\n    } else {\n      photo.endWidth = img.naturalWidth;\n      photo.endHeight = img.naturalHeight;\n    }\n\n    const canvas = Converter.imageToCanvas(\n      photo.endWidth,\n      photo.endHeight,\n      photo.orientation\n    )(img);\n\n    photo.iterations = 1;\n    photo.base64prefix = Base64.prefix(photo.ext);\n\n    const base64 = await loopCompression(\n      canvas,\n      photo.startSize,\n      photo.quality,\n      photo.size,\n      photo.minQuality,\n      photo.iterations\n    );\n\n    photo.finalSize = Base64.size(base64);\n    photo.end = window.performance.now();\n    const difference = photo.end - photo.start; // in ms\n\n    return {\n      data: Base64.data(base64),\n      prefix: photo.base64prefix,\n      elapsedTimeInSeconds: difference / 1000, // in seconds\n      alt: photo.alt,\n      initialSizeInMb: Converter.size(photo.startSize).MB,\n      endSizeInMb: Converter.size(photo.finalSize).MB,\n      ext: photo.ext,\n      quality: photo.quality,\n      endWidthInPx: photo.endWidth,\n      endHeightInPx: photo.endHeight,\n      initialWidthInPx: photo.startWidth,\n      initialHeightInPx: photo.startHeight,\n      sizeReducedInPercent:\n        ((photo.startSize - photo.finalSize) / photo.startSize) * 100,\n      iterations: photo.iterations,\n    };\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}