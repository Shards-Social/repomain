{"ast":null,"code":"import{useCallback}from\"react\";import{useDispatch}from\"react-redux\";import{useNavigate}from\"react-router-dom\";import{showModal}from\"../features/modalSlice\";const useFetch=()=>{const dispatch=useDispatch();const navigate=useNavigate();return useCallback(async function(callback){try{for(var _len=arguments.length,props=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){props[_key-1]=arguments[_key];}return await callback(...props);}catch(error){var _error$response,_error$response2,_error$response2$data;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===404)navigate(\"/not-found\");const msg=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.msg)||\"Something went wrong\";dispatch(showModal({msg}));}},//if I add navigate here, it will be re-rendered every time\n//eslint-disable-next-line\n[dispatch]);};export default useFetch;","map":{"version":3,"names":["useCallback","useDispatch","useNavigate","showModal","useFetch","dispatch","navigate","callback","_len","arguments","length","props","Array","_key","error","_error$response","_error$response2","_error$response2$data","response","status","msg","data"],"sources":["C:/Users/samth/repomain-1/src/hooks/useFetch.js"],"sourcesContent":["import { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { showModal } from \"../features/modalSlice\";\r\n\r\nconst useFetch = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst navigate = useNavigate();\r\n\treturn useCallback(\r\n\t\tasync (callback, ...props) => {\r\n\t\t\ttry {\r\n\t\t\t\treturn await callback(...props);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tif (error.response?.status === 404) navigate(\"/not-found\");\r\n\t\t\t\tconst msg = error.response?.data?.msg || \"Something went wrong\";\r\n\t\t\t\tdispatch(showModal({ msg }));\r\n\t\t\t}\r\n\t\t},\r\n\t\t//if I add navigate here, it will be re-rendered every time\r\n\t\t//eslint-disable-next-line\r\n\t\t[dispatch]\r\n\t);\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,OAAO,CACnC,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,SAAS,KAAQ,wBAAwB,CAElD,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAAC,QAAQ,CAAGJ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAK,QAAQ,CAAGJ,WAAW,CAAC,CAAC,CAC9B,MAAO,CAAAF,WAAW,CACjB,eAAOO,QAAQ,CAAe,CAC7B,GAAI,SAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA,CADeC,KAAK,KAAAC,KAAA,CAAAJ,IAAA,GAAAA,IAAA,MAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAALF,KAAK,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA,GAEvB,MAAO,MAAM,CAAAN,QAAQ,CAAC,GAAGI,KAAK,CAAC,CAChC,CAAE,MAAOG,KAAK,CAAE,KAAAC,eAAA,CAAAC,gBAAA,CAAAC,qBAAA,CACf,GAAI,EAAAF,eAAA,CAAAD,KAAK,CAACI,QAAQ,UAAAH,eAAA,iBAAdA,eAAA,CAAgBI,MAAM,IAAK,GAAG,CAAEb,QAAQ,CAAC,YAAY,CAAC,CAC1D,KAAM,CAAAc,GAAG,CAAG,EAAAJ,gBAAA,CAAAF,KAAK,CAACI,QAAQ,UAAAF,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBK,IAAI,UAAAJ,qBAAA,iBAApBA,qBAAA,CAAsBG,GAAG,GAAI,sBAAsB,CAC/Df,QAAQ,CAACF,SAAS,CAAC,CAAEiB,GAAI,CAAC,CAAC,CAAC,CAC7B,CACD,CAAC,CACD;AACA;AACA,CAACf,QAAQ,CACV,CAAC,CACF,CAAC,CAED,cAAe,CAAAD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}