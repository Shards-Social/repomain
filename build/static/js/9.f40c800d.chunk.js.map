{"version":3,"sources":["components/MainGallery/MainGallery.jsx","components/Gallery/Gallery.jsx","pages/Profile/Profile.jsx"],"names":["MainGallery","posts","onClose","className","onClick","src","closeIcon","alt","map","post","to","_id","image","Gallery","postsWithImages","useSelector","state","userPosts","filter","useState","isMainGalleryOpen","setIsMainGalleryOpen","Backdrop","show","v","i","length","Profile","id","useParams","page","isOwnProfile","user","isLoading","setIsLoading","dispatch","useDispatch","customFetch","useFetch","useEffect","a","fetchPostsService","userId","data","setUserPosts","getNextPage","concat","ProfileCard","InfinityScroll","CreatePost","Posts","Online"],"mappings":"oQAoBeA,EAfK,SAAH,GAA4B,IAAtBC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAC7B,OACC,sBAAKC,UAAU,cAAa,UAC3B,wBAAQC,QAASF,EAAS,aAAW,QAAO,SAC3C,qBAAKG,IAAKC,IAAWC,IAAI,YAEzBN,EAAMO,KAAI,SAAAC,GAAI,OACd,cAAC,IAAI,CAACC,GAAE,gBAAWD,EAAKE,KAAM,SAC7B,qBAAKN,IAAKI,EAAKG,MAAMP,IAAKE,IAAI,iBADKE,EAAKE,YC4B9BE,G,OAjCC,WACf,IAGMC,EADFC,aAAY,SAAAC,GAAK,OAAIA,EAAMP,QAD9BQ,UAAahB,MAEgBiB,QAAO,SAAAT,GAAI,QAAMA,EAAKG,SACpD,EAAkDO,oBAAS,GAAM,mBAA1DC,EAAiB,KAAEC,EAAoB,KAM9C,OACC,0BAASlB,UAAU,UAAS,UAC3B,cAACmB,EAAA,EAAQ,CAACC,KAAMH,EAAmBlB,QANjB,WACnBmB,GAAqB,IAKoC,SACvD,cAAC,EAAW,CAACpB,MAAOa,MAErB,qBAAKX,UAAU,kBAAiB,SAC9BW,EAAgBN,KAChB,SAACgB,EAAGC,GAAC,OACJA,EAAI,GACH,cAAC,IAAI,CAACf,GAAE,gBAAWc,EAAEb,KAAM,SAC1B,qBAAKN,IAAM,OAADmB,QAAC,IAADA,OAAC,EAADA,EAAGZ,MAAMP,IAAKE,IAAI,eADIiB,EAAEb,UAMtCG,EAAgBY,OAAS,GACzB,wBAAQtB,QAAS,kBAAMiB,GAAqB,IAAM,2B,iFC0BvCM,UA9CC,WACf,IAAQC,EAAOC,cAAPD,GAG4B,EAAhCb,aAAY,SAAAC,GAAK,OAAIA,EAAMP,QAD9BQ,UAAahB,EAAK,EAALA,MAAO6B,EAAI,EAAJA,KAEfC,EAAeH,IAAOb,aAAY,SAAAC,GAAK,OAAIA,EAAMgB,KAAKJ,MAC5D,EAAkCT,oBAAS,GAAK,mBAAzCc,EAAS,KAAEC,EAAY,KAExBC,EAAWC,cACXC,EAAcC,cAEpBC,qBAAU,WACT,sBAAC,4BAAAC,EAAA,sDACmB,OAAnBN,GAAa,GAAM,SACAG,EAAYI,IAAmB,CAAEC,OAAQd,IAAM,KAAD,GAA3De,EAAI,SACAR,EAASS,YAAaD,IAChCT,GAAa,GAAO,0CAJrB,KAME,CAACC,EAAUP,EAAIS,IAElB,IAAMQ,EAAW,uCAAG,4BAAAL,EAAA,sEACAH,EAAYI,IAAmB,CAAEC,OAAQd,EAAIE,KAAMA,EAAO,IAAK,KAAD,EACJ,OADvEa,EAAI,OACVR,EAASS,YAAa,CAAE3C,MAAOA,EAAM6C,OAAOH,EAAK1C,OAAQ6B,KAAMa,EAAKb,QAAS,kBACtEa,EAAK1C,MAAMyB,QAAM,2CACxB,kBAJgB,mCAMjB,OACC,0BAASvB,UAAU,UAAS,UAC3B,0BAASA,UAAU,gBAAe,UACjC,cAAC4C,EAAA,EAAW,CAACnB,GAAIA,EAAIG,aAAcA,IACnC,cAAC,EAAO,OAET,cAACiB,EAAA,EAAc,CAACH,YAAaA,EAAY,SACxC,0BAAS1C,UAAU,kBAAiB,UAClC4B,GAAgB,cAACkB,EAAA,EAAU,IAC3BhD,EAAMyB,OAAS,IAAMO,GAAa,0CACnC,cAACiB,EAAA,EAAK,CAACjD,MAAOA,EAAOgC,UAAWA,SAGlC,yBAAS9B,UAAU,iCAAgC,SAClD,cAACgD,EAAA,EAAM","file":"static/js/9.f40c800d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { closeIcon } from \"../../assets\";\r\nimport \"./maingallery.css\";\r\n\r\nconst MainGallery = ({ posts, onClose }) => {\r\n\treturn (\r\n\t\t<div className=\"maingallery\">\r\n\t\t\t<button onClick={onClose} aria-label=\"close\">\r\n\t\t\t\t<img src={closeIcon} alt=\"close\" />\r\n\t\t\t</button>\r\n\t\t\t{posts.map(post => (\r\n\t\t\t\t<Link to={`/post/${post._id}`} key={post._id}>\r\n\t\t\t\t\t<img src={post.image.src} alt=\"post-images\" />\r\n\t\t\t\t</Link>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MainGallery;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport MainGallery from \"../MainGallery/MainGallery\";\r\nimport \"./gallery.css\";\r\n\r\nconst Gallery = () => {\r\n\tconst {\r\n\t\tuserPosts: { posts },\r\n\t} = useSelector(state => state.post);\r\n\tconst postsWithImages = posts.filter(post => !!post.image);\r\n\tconst [isMainGalleryOpen, setIsMainGalleryOpen] = useState(false);\r\n\r\n\tconst hideGallery = () => {\r\n\t\tsetIsMainGalleryOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className=\"gallery\">\r\n\t\t\t<Backdrop show={isMainGalleryOpen} onClose={hideGallery}>\r\n\t\t\t\t<MainGallery posts={postsWithImages} />\r\n\t\t\t</Backdrop>\r\n\t\t\t<div className=\"gallery__images\">\r\n\t\t\t\t{postsWithImages.map(\r\n\t\t\t\t\t(v, i) =>\r\n\t\t\t\t\t\ti < 3 && (\r\n\t\t\t\t\t\t\t<Link to={`/post/${v._id}`} key={v._id}>\r\n\t\t\t\t\t\t\t\t<img src={v?.image.src} alt=\"postimage\" />\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{postsWithImages.length > 3 && (\r\n\t\t\t\t<button onClick={() => setIsMainGalleryOpen(true)}>View All</button>\r\n\t\t\t)}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Gallery from \"../../components/Gallery/Gallery\";\r\nimport Online from \"../../components/Online/Online\";\r\nimport ProfileCard from \"../../components/ProfileCard/ProfileCard\";\r\nimport { useParams } from \"react-router\";\r\nimport CreatePost from \"../../components/CreatePost/CreatePost\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserPosts } from \"../../features/postSlice\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport Posts from \"../../components/Post/Posts\";\r\nimport { fetchPostsService } from \"../../services/postServices\";\r\nimport InfinityScroll from \"../../components/InfinityScroll/InfinityScroll\";\r\nimport \"./profile.css\";\r\n\r\nconst Profile = () => {\r\n\tconst { id } = useParams();\r\n\tconst {\r\n\t\tuserPosts: { posts, page },\r\n\t} = useSelector(state => state.post);\r\n\tconst isOwnProfile = id === useSelector(state => state.user.id);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst customFetch = useFetch();\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst data = await customFetch(fetchPostsService, { userId: id });\r\n\t\t\tif (data) dispatch(setUserPosts(data));\r\n\t\t\tsetIsLoading(false);\r\n\t\t})();\r\n\t}, [dispatch, id, customFetch]);\r\n\r\n\tconst getNextPage = async () => {\r\n\t\tconst data = await customFetch(fetchPostsService, { userId: id, page: page + 1 });\r\n\t\tdispatch(setUserPosts({ posts: posts.concat(data.posts), page: data.page }));\r\n\t\treturn data.posts.length;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className=\"profile\">\r\n\t\t\t<article className=\"profile__left\">\r\n\t\t\t\t<ProfileCard id={id} isOwnProfile={isOwnProfile} />\r\n\t\t\t\t<Gallery />\r\n\t\t\t</article>\r\n\t\t\t<InfinityScroll getNextPage={getNextPage}>\r\n\t\t\t\t<article className=\"profile__center\">\r\n\t\t\t\t\t{isOwnProfile && <CreatePost />}\r\n\t\t\t\t\t{posts.length < 1 && !isLoading && <h2>No Posts</h2>}\r\n\t\t\t\t\t<Posts posts={posts} isLoading={isLoading} />\r\n\t\t\t\t</article>\r\n\t\t\t</InfinityScroll>\r\n\t\t\t<article className=\"profile__right gradient-border\">\r\n\t\t\t\t<Online />\r\n\t\t\t</article>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}