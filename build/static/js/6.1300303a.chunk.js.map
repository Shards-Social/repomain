{"version":3,"sources":["components/Input/EmojiPicker.jsx","components/Input/Input.jsx","components/Options/Options.jsx","components/Confirmation/useConfirmation.jsx","DATE.js","utils/getDateString.js","components/Post/Loading.jsx","components/Post/Share.jsx","components/Post/ImageViewer.jsx","components/Post/Post.jsx","components/Comment/Comment.jsx","components/Comments/Comments.jsx","pages/Singlepost/SinglePost.jsx"],"names":["EmojiPicker","forwardRef","ref","setValue","emojiRef","useRef","useImperativeHandle","close","setIsOpen","useState","isOpen","useEffect","emojiPicker","current","addEmoji","e","value","detail","unicode","addEventListener","removeEventListener","className","onClick","open","Input","placeholder","handler","showEmoji","initialValue","submitHandler","preventDefault","trim","onSubmit","type","onChange","target","onFocus","src","sendIcon","alt","Options","options","id","isOptionsVisible","setIsOptionsVisible","handleOutsideClick","document","body","val","optionsIcon","Object","entries","map","i","title","handleClick","Confirmation","show","toggleShow","text","onSuccess","onClose","useConfirmation","setShow","Comp","months","getDateString","date","newDate","Date","getDate","getMonth","getFullYear","Post","singlepost","dp","style","width","height","marginTop","borderRadius","Loading","ShareItem","item","Icon","Share","post","dispatch","useDispatch","shareToUrls","twitter","caption","_id","facebook","linkedin","whatsapp","shareTo","dest","window","shareItems","navigator","clipboard","writeText","showModal","msg","ImEmbed","IoLogoWhatsapp","BsFacebook","AiOutlineTwitter","FaLinkedinIn","ImageViewer","image","closeIcon","createdAt","showShare","setShowShare","showImage","setShowImage","customFetch","useFetch","navigate","useNavigate","useSelector","state","user","usersOnline","users","isOwnPost","createdBy","isLiked","likes","includes","isOnline","some","deletePost","Delete","Edit","setEditingPost","postDetails","toggleImage","split","para","Backdrop","loading","to","userDetails","name","likePost","length","getNumberOfLikes","comment","commentPost","comments","Comment","postId","find","commentedBy","isEditing","setIsEditing","isReplying","setIsReplying","commentId","deleteComment","replyId","DeleteConfirm","Reply","profileImage","replyTo","editComment","replyComment","Comments","replies","reply","SinglePost","useParams","embed","fromEntries","useLocation","search","slice","ele","token","JSON","parse","Cookies","get","singlePost","isLoading","setIsLoading","a","fetchPostsService","data","setSinglePost","commentHandler","Online"],"mappings":"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","file":"static/js/6.1300303a.chunk.js","sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport \"emoji-picker-element\";\r\nimport { FaRegKeyboard } from \"react-icons/fa\";\r\nimport { BsEmojiSmile } from \"react-icons/bs\";\r\nimport { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useImperativeHandle } from \"react\";\r\n\r\nconst EmojiPicker = forwardRef(({ setValue }, ref) => {\r\n\tconst emojiRef = useRef();\r\n\r\n\tuseImperativeHandle(ref, () => ({\r\n\t\tclose: () => setIsOpen(false),\r\n\t}));\r\n\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst emojiPicker = emojiRef.current;\r\n\t\tconst addEmoji = e => {\r\n\t\t\tsetValue(value => value + e.detail.unicode);\r\n\t\t};\r\n\t\temojiPicker.addEventListener(\"emoji-click\", addEmoji);\r\n\t\treturn () => {\r\n\t\t\temojiPicker.removeEventListener(\"emoji-click\", addEmoji);\r\n\t\t};\r\n\t}, [setValue]);\r\n\r\n\treturn (\r\n\t\t<div className=\"emoji-picker\">\r\n\t\t\t<div className=\"opener\" onClick={() => setIsOpen(open => !open)}>\r\n\t\t\t\t{isOpen ? <FaRegKeyboard /> : <BsEmojiSmile />}\r\n\t\t\t</div>\r\n\t\t\t<div className={isOpen ? \"picker open\" : \"picker\"}>\r\n\t\t\t\t<emoji-picker ref={emojiRef} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nexport default EmojiPicker;\r\n","import React, { useState } from \"react\";\r\nimport { sendIcon } from \"../../assets\";\r\n\r\nimport \"./input.css\";\r\nimport EmojiPicker from \"./EmojiPicker\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Input = ({ placeholder, handler, showEmoji, initialValue = \"\" }) => {\r\n\tconst submitHandler = async e => {\r\n\t\te.preventDefault();\r\n\t\temojiRef.current?.close();\r\n\t\tif (value.trim()) handler(value.trim());\r\n\t\tsetValue(\"\");\r\n\t};\r\n\tconst [value, setValue] = useState(initialValue);\r\n\tconst emojiRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tsetValue(initialValue);\r\n\t}, [initialValue]);\r\n\r\n\treturn (\r\n\t\t<form className=\"input__box\" onSubmit={submitHandler}>\r\n\t\t\t{showEmoji && <EmojiPicker setValue={setValue} ref={emojiRef} />}\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={e => setValue(e.target.value)}\r\n\t\t\t\tonFocus={() => emojiRef.current?.close()}\r\n\t\t\t/>\r\n\t\t\t<button type=\"submit\" aria-label=\"submit\">\r\n\t\t\t\t<img src={sendIcon} alt=\"send\" />\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { optionsIcon } from \"../../assets\";\r\nimport \"./options.css\";\r\n\r\nconst Options = ({ options, id = \"\" }) => {\r\n\tconst [isOptionsVisible, setIsOptionsVisible] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleOutsideClick = e => {\r\n\t\t\tif (e.target.id !== \"options\" + id && e.target.id !== \"options__icon\" + id) {\r\n\t\t\t\tsetIsOptionsVisible(false);\r\n\t\t\t}\r\n\t\t};\r\n\t\tdocument.body.addEventListener(\"click\", handleOutsideClick);\r\n\t\treturn () => document.body.removeEventListener(\"click\", handleOutsideClick);\r\n\t}, [id]);\r\n\r\n\tconst handleClick = handler => {\r\n\t\tsetIsOptionsVisible(false);\r\n\t\thandler();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"options\" id={\"options\" + id} onClick={() => setIsOptionsVisible(val => !val)}>\r\n\t\t\t<img src={optionsIcon} alt=\"options\" className=\"options__icon\" id={\"options__icon\" + id} />\r\n\t\t\t<ul className={isOptionsVisible ? \"show\" : \"\"}>\r\n\t\t\t\t{Object.entries(options).map(([title, handler], i) => (\r\n\t\t\t\t\t<li onClick={() => handleClick(handler)} key={i}>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Options;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport \"./confirmation.css\";\r\n\r\nconst Confirmation = ({ show, toggleShow, text, onSuccess }) => (\r\n\t<Backdrop show={show} onClose={toggleShow}>\r\n\t\t<div className=\"confirmation\">\r\n\t\t\t<h2>{text}</h2>\r\n\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t<button onClick={toggleShow}>Cancel</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"danger\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\ttoggleShow();\r\n\t\t\t\t\t\tonSuccess();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tYes, I'm sure\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</Backdrop>\r\n);\r\nconst useConfirmation = (onSuccess, text = \"Are Your sure ?\") => {\r\n\tconst [show, setShow] = useState(false);\r\n\tconst toggleShow = () => setShow(!show);\r\n\tconst Comp = <Confirmation show={show} onSuccess={onSuccess} text={text} toggleShow={toggleShow} />;\r\n\treturn { toggleShow, Confirmation: Comp };\r\n};\r\n\r\nexport default useConfirmation;\r\n","const months = [\r\n   \"January\",\r\n   \"February\",\r\n   \"March\",\r\n   \"April\",\r\n   \"May\",\r\n   \"June\",\r\n   \"July\",\r\n   \"August\",\r\n   \"September\",\r\n   \"October\",\r\n   \"November\",\r\n   \"December\",\r\n];\r\n\r\nexport { months };\r\n","import { months } from \"../DATE\";\r\n\r\nconst getDateString = date => {\r\n\tif (!date) return \"\";\r\n\tlet newDate = new Date(date);\r\n\tnewDate = `${newDate.getDate()} ${months[newDate.getMonth()]} ${newDate.getFullYear()}`;\r\n\treturn newDate;\r\n};\r\n\r\nexport default getDateString;\r\n","import React from \"react\";\r\nimport { dp } from \"../../assets\";\r\nimport { AiFillHeart } from \"react-icons/ai\";\r\n\r\nexport const Post = ({ singlepost }) => (\r\n\t<article className={singlepost ? \"post halfborder single\" : \"post gradient-border\"}>\r\n\t\t<header>\r\n\t\t\t<img src={dp} alt=\"profileImage\" className=\"post__dp roundimage\" />\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"loadingBox\" style={{ width: \"70px\", height: \"10px\" }}></div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"loadingBox\"\r\n\t\t\t\t\tstyle={{ width: \"100px\", height: \"10px\", marginTop: \"0.5em\" }}\r\n\t\t\t\t></div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t\t<div className=\"post__details\">\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"loadingBox\"\r\n\t\t\t\tstyle={{ width: \"100%\", height: singlepost ? \"60vh\" : \"400px\", borderRadius: \"1em\" }}\r\n\t\t\t></div>\r\n\t\t</div>\r\n\t\t<div className=\"post__footer\">\r\n\t\t\t<div className=\"group\">\r\n\t\t\t\t<AiFillHeart />\r\n\t\t\t\t<div className=\"loadingBox\" style={{ width: \"250px\", height: \"20px\" }}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</article>\r\n);\r\n\r\nconst Loading = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Post />\r\n\t\t\t<Post />\r\n\t\t\t<Post />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { AiOutlineTwitter } from \"react-icons/ai\";\r\nimport { IoLogoWhatsapp } from \"react-icons/io\";\r\nimport { BsFacebook } from \"react-icons/bs\";\r\nimport { FaLinkedinIn } from \"react-icons/fa\";\r\nimport { ImEmbed } from \"react-icons/im\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showModal } from \"../../features/modalSlice\";\r\n\r\nconst ShareItem = ({ item }) => {\r\n\tconst { onClick, Icon, title } = item;\r\n\treturn (\r\n\t\t<div className=\"share__item\" onClick={onClick}>\r\n\t\t\t<Icon />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Share = ({ post }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst copyURL = () => {\r\n\t\twindow.navigator.clipboard.writeText(`https://adra-amie.netlify.app/post/${post._id}`);\r\n\t\tdispatch(showModal({ msg: \"URL copied to clipboard\" }));\r\n\t};\r\n\r\n\tconst copyEmbed = () => {\r\n\t\twindow.navigator.clipboard.writeText(\r\n\t\t\t`<iframe\r\n\t\t\t\tsrc=\"https://adra-amie.netlify.app/post/${post._id}?embed=true\"\r\n\t\t\t\twidth=\"500\"\r\n\t\t\t\theight=\"700\"\r\n\t\t\t\ttitle=\"social-media-app\"\r\n\t\t\t></iframe>`\r\n\t\t);\r\n\t\tdispatch(showModal({ msg: \"Copied embed code to clipboard\" }));\r\n\t};\r\n\r\n\tconst shareToUrls = {\r\n\t\ttwitter: `https://twitter.com/intent/tweet?text=${post.caption}&url=https://adra-amie.netlify.app/post/${post._id}`,\r\n\t\tfacebook: `https://www.facebook.com/dialog/share?\r\n\t\tapp_id=287203076842060\r\n\t\t&display=popup\r\n\t\t&href=https://adra-amie.netlify.app/post/${post._id}\r\n\t\t&redirect_uri=https://adra-amie.netlify.app/post/${post._id}`,\r\n\t\tlinkedin: `https://www.linkedin.com/sharing/share-offsite/?url=https://adra-amie.netlify.app/post/${post._id}`,\r\n\t\twhatsapp: `https://api.whatsapp.com/send/?text=${post.caption} Link: https://adra-amie.netlify.app/post/${post._id}`,\r\n\t};\r\n\r\n\tconst shareTo = dest => {\r\n\t\twindow.open(shareToUrls[dest], \"_blank\");\r\n\t};\r\n\r\n\tconst shareItems = [\r\n\t\t{\r\n\t\t\ttitle: \"Embed\",\r\n\t\t\tonClick: copyEmbed,\r\n\t\t\tIcon: ImEmbed,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Whatsapp\",\r\n\t\t\tonClick: () => shareTo(\"whatsapp\"),\r\n\t\t\tIcon: IoLogoWhatsapp,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Facebook\",\r\n\t\t\tonClick: () => shareTo(\"facebook\"),\r\n\t\t\tIcon: BsFacebook,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Twitter\",\r\n\t\t\tonClick: () => shareTo(\"twitter\"),\r\n\t\t\tIcon: AiOutlineTwitter,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Linked In\",\r\n\t\t\tonClick: () => shareTo(\"linkedin\"),\r\n\t\t\tIcon: FaLinkedinIn,\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<article className=\"share\">\r\n\t\t\t<h2>Share</h2>\r\n\t\t\t<div className=\"share__items\">\r\n\t\t\t\t{shareItems.map((item, i) => (\r\n\t\t\t\t\t<ShareItem item={item} key={i} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"share__url\">\r\n\t\t\t\t{post._id}\r\n\t\t\t\t<button className=\"btn\" onClick={copyURL}>\r\n\t\t\t\t\tCopy URL\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</article>\r\n\t);\r\n};\r\n\r\nexport default Share;\r\n","import React from \"react\";\r\nimport { closeIcon } from \"../../assets\";\r\n\r\nconst ImageViewer = ({ image, onClose }) => {\r\n\treturn (\r\n\t\t<div className=\"imageViewer\">\r\n\t\t\t<button onClick={onClose} aria-label=\"close\">\r\n\t\t\t\t<img src={closeIcon} alt=\"close\" />\r\n\t\t\t</button>\r\n\t\t\t<img src={image} alt=\"post\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ImageViewer;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deletePost, setEditingPost, commentPost, likePost } from \"../../features/postSlice\";\r\nimport { dp } from \"../../assets\";\r\nimport Input from \"../Input/Input\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport Options from \"../Options/Options\";\r\nimport \"./post.css\";\r\nimport { AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\r\nimport { BiCommentDetail } from \"react-icons/bi\";\r\nimport { IoIosShareAlt } from \"react-icons/io\";\r\nimport getDateString from \"../../utils/getDateString\";\r\nimport Share from \"./Share\";\r\nimport { useState } from \"react\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport ImageViewer from \"./ImageViewer\";\r\nimport useConfirmation from \"../Confirmation/useConfirmation\";\r\n\r\nconst Post = ({ singlepost, post }) => {\r\n\tconst createdAt = getDateString(post.createdAt);\r\n\tconst [showShare, setShowShare] = useState(false);\r\n\tconst [showImage, setShowImage] = useState(false);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst customFetch = useFetch();\r\n\tconst navigate = useNavigate();\r\n\r\n\t//global states\r\n\tconst {\r\n\t\tuser: { id },\r\n\t\tusers: { usersOnline },\r\n\t} = useSelector(state => state);\r\n\tconst isOwnPost = id === post.createdBy;\r\n\tconst isLiked = post.likes?.includes(id);\r\n\tconst isOnline = usersOnline.some(user => user.id === post.createdBy);\r\n\r\n\tconst likeHandler = () => {\r\n\t\tdispatch(likePost({ customFetch, id: post._id, isLiked }));\r\n\t};\r\n\r\n\tconst commentHandler = comment => {\r\n\t\tdispatch(commentPost({ customFetch, id: post._id, comment }));\r\n\t};\r\n\r\n\tconst deleteHandler = () => {\r\n\t\tdispatch(deletePost({ customFetch, id: post._id }));\r\n\t\tsinglepost && navigate(-1);\r\n\t};\r\n\r\n\tconst editHandler = () => {\r\n\t\tdispatch(setEditingPost(post));\r\n\t};\r\n\r\n\tconst { Confirmation, toggleShow } = useConfirmation(\r\n\t\tdeleteHandler,\r\n\t\t\"Are you sure, You want to delete the post?\"\r\n\t);\r\n\r\n\tconst options = {\r\n\t\tDelete: toggleShow,\r\n\t\tEdit: editHandler,\r\n\t};\r\n\r\n\tconst getParagraphs = text => {\r\n\t\tconst paragraphArray = text.split(/[\\n\\r]/g);\r\n\t\treturn paragraphArray.map(\r\n\t\t\t(para, i) =>\r\n\t\t\t\tpara && (\r\n\t\t\t\t\t<p className=\"post__caption\" key={i}>\r\n\t\t\t\t\t\t{para}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)\r\n\t\t);\r\n\t};\r\n\r\n\tconst getNumberOfLikes = () => {\r\n\t\tif (post.likes?.length) {\r\n\t\t\treturn post.likes?.includes(id)\r\n\t\t\t\t? post.likes?.length - 1 === 0\r\n\t\t\t\t\t? \"You\"\r\n\t\t\t\t\t: post.likes?.length - 1 === 1\r\n\t\t\t\t\t? \"You and 1 more\"\r\n\t\t\t\t\t: `You and ${post.likes.length - 1} others`\r\n\t\t\t\t: post.likes?.length;\r\n\t\t}\r\n\t\treturn \"\";\r\n\t};\r\n\r\n\tconst postDetails = () => {\r\n\t\tconst toggleImage = () => setShowImage(!showImage);\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{post.caption && getParagraphs(post.caption)}\r\n\t\t\t\t{singlepost && (\r\n\t\t\t\t\t<Backdrop show={showImage} onClose={toggleImage}>\r\n\t\t\t\t\t\t<ImageViewer image={post.image?.src} />\r\n\t\t\t\t\t</Backdrop>\r\n\t\t\t\t)}\r\n\t\t\t\t{post.image?.src && (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={post.image.src}\r\n\t\t\t\t\t\talt=\"post_image\"\r\n\t\t\t\t\t\tclassName=\"post__image\"\r\n\t\t\t\t\t\tloading=\"lazy\"\r\n\t\t\t\t\t\tonClick={toggleImage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<article className={singlepost ? \"post halfborder single\" : \"post gradient-border\"}>\r\n\t\t\t{Confirmation}\r\n\t\t\t<Backdrop show={showShare} onClose={() => setShowShare(false)}>\r\n\t\t\t\t<Share post={post} />\r\n\t\t\t</Backdrop>\r\n\t\t\t<header>\r\n\t\t\t\t<Link to={`/user/${post.createdBy}`} className={isOnline ? \"green\" : \"\"}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={post.userDetails?.image || dp}\r\n\t\t\t\t\t\talt=\"profileImage\"\r\n\t\t\t\t\t\tloading=\"lazy\"\r\n\t\t\t\t\t\tclassName=\"post__dp roundimage\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>{post.userDetails?.name}</h3>\r\n\t\t\t\t\t<p>{createdAt}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t{isOwnPost && <Options options={options} id={post._id} />}\r\n\t\t\t</header>\r\n\t\t\t<div className=\"post__details\">\r\n\t\t\t\t{singlepost ? postDetails() : <Link to={`/post/${post._id}`}>{postDetails()}</Link>}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"post__footer\">\r\n\t\t\t\t<div className=\"group\">\r\n\t\t\t\t\t<div onClick={likeHandler}>{isLiked ? <AiFillHeart /> : <AiOutlineHeart />}</div>\r\n\t\t\t\t\t<p>{getNumberOfLikes()}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t{singlepost || <Input placeholder={\"Comment\"} handler={commentHandler} />}\r\n\t\t\t\t<Link className={singlepost ? \"comment__icon group\" : \"group\"} to={`/post/${post._id}`}>\r\n\t\t\t\t\t<BiCommentDetail />\r\n\t\t\t\t\t<p>{post.comments.length}</p>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"group\" onClick={() => setShowShare(true)} title=\"share\">\r\n\t\t\t\t\t<IoIosShareAlt />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</article>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { dp } from \"../../assets\";\r\nimport { deleteComment, editComment, replyComment } from \"../../features/postSlice\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useConfirmation from \"../Confirmation/useConfirmation\";\r\nimport Input from \"../Input/Input\";\r\nimport Options from \"../Options/Options\";\r\nimport \"./comment.css\";\r\n\r\nconst Comment = ({ comment, postId }) => {\r\n\tconst { users } = useSelector(state => state.users);\r\n\tconst user = users.find(user => user._id === comment.commentedBy);\r\n\r\n\tconst customFetch = useFetch();\r\n\tconst dispatch = useDispatch();\r\n\tconst { id } = useSelector(state => state.user);\r\n\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\tconst [isReplying, setIsReplying] = useState(false);\r\n\r\n\tconst deleteCommentHandler = () => {\r\n\t\tif (comment.commentId) {\r\n\t\t\tdispatch(\r\n\t\t\t\tdeleteComment({ replyId: comment._id, postId, customFetch, commentId: comment.commentId })\r\n\t\t\t);\r\n\t\t} else dispatch(deleteComment({ commentId: comment._id, postId, customFetch }));\r\n\t};\r\n\r\n\tconst editCommentHandler = value => {\r\n\t\tif (comment.commentId) {\r\n\t\t\tdispatch(\r\n\t\t\t\teditComment({\r\n\t\t\t\t\treplyId: comment._id,\r\n\t\t\t\t\tpostId,\r\n\t\t\t\t\tcustomFetch,\r\n\t\t\t\t\tcommentId: comment.commentId,\r\n\t\t\t\t\tcomment: value,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else dispatch(editComment({ commentId: comment._id, postId, comment: value, customFetch }));\r\n\t\tsetIsEditing(false);\r\n\t};\r\n\r\n\tconst replyHandler = value => {\r\n\t\tdispatch(\r\n\t\t\treplyComment({\r\n\t\t\t\tcommentId: comment.commentId || comment._id,\r\n\t\t\t\tid: postId,\r\n\t\t\t\tcomment: value,\r\n\t\t\t\treplyTo: user?.name,\r\n\t\t\t\tcustomFetch,\r\n\t\t\t})\r\n\t\t);\r\n\t\tsetIsReplying(false);\r\n\t};\r\n\r\n\tconst { Confirmation: DeleteConfirm, toggleShow } = useConfirmation(\r\n\t\tdeleteCommentHandler,\r\n\t\t\"Are you sure, You want to delete the comment?\"\r\n\t);\r\n\r\n\tconst options = { Reply: () => setIsReplying(true) };\r\n\tif (id === user?._id) {\r\n\t\toptions.Delete = toggleShow;\r\n\t\toptions.Edit = () => setIsEditing(true);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"comment__group\">\r\n\t\t\t{DeleteConfirm}\r\n\t\t\t<div className=\"comment\">\r\n\t\t\t\t<Link to={`/user/${user?._id}`}>\r\n\t\t\t\t\t<img src={user?.profileImage || dp} alt={`${user?.name}-dp`} className=\"comment__dp\" />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>{user?.name || \"user\"}</h3>\r\n\t\t\t\t\t<p className=\"comment__text\">\r\n\t\t\t\t\t\t{comment?.replyTo && <span>@{comment.replyTo}</span>} {comment?.comment}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Options options={options} id={comment._id} />\r\n\t\t\t</div>\r\n\t\t\t{isEditing && (\r\n\t\t\t\t<Input\r\n\t\t\t\t\tplaceholder=\"Edit Comment\"\r\n\t\t\t\t\thandler={editCommentHandler}\r\n\t\t\t\t\tinitialValue={comment?.comment}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{isReplying && <Input placeholder={`Reply to ${user?.name}`} handler={replyHandler} />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Comment;\r\n","import React from \"react\";\r\nimport Comment from \"../Comment/Comment\";\r\nimport \"./comments.css\";\r\n\r\nconst Comments = ({ post }) => {\r\n\treturn (\r\n\t\t<div className=\"comments\">\r\n\t\t\t<div>\r\n\t\t\t\t<h3>{(post?.comments?.length || \"\") + \" comments\"}</h3>\r\n\t\t\t\t{post?.comments?.map(comment => (\r\n\t\t\t\t\t<div className=\"commentAndReplies\" key={comment._id}>\r\n\t\t\t\t\t\t<Comment comment={comment} postId={post._id} />\r\n\t\t\t\t\t\t{!!comment.replies.length && (\r\n\t\t\t\t\t\t\t<div className=\"replies\">\r\n\t\t\t\t\t\t\t\t{comment.replies?.map(reply => (\r\n\t\t\t\t\t\t\t\t\t<Comment comment={reply} key={reply._id} postId={post._id} />\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Comments from \"../../components/Comments/Comments\";\r\nimport Post from \"../../components/Post/Post\";\r\nimport Online from \"../../components/Online/Online\";\r\nimport { useParams, useLocation } from \"react-router\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSinglePost, commentPost } from \"../../features/postSlice\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { fetchPostsService } from \"../../services/postServices\";\r\nimport \"./singlepost.css\";\r\nimport { Post as PostLoading } from \"../../components/Post/Loading\";\r\n\r\nconst SinglePost = () => {\r\n\tconst { id } = useParams();\r\n\tconst { embed } = Object.fromEntries(\r\n\t\tuseLocation()\r\n\t\t\t.search.slice(1)\r\n\t\t\t.split(\"&\")\r\n\t\t\t.map(ele => ele.split(\"=\"))\r\n\t);\r\n\tconst { token } = JSON.parse(Cookies.get(\"user\") ?? \"{}\");\r\n\tconst { singlePost } = useSelector(state => state.post);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst customFetch = useFetch();\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst data = await customFetch(fetchPostsService, { id });\r\n\t\t\tif (data) dispatch(setSinglePost(data.post));\r\n\t\t\tsetIsLoading(false);\r\n\t\t})();\r\n\t}, [id, token, dispatch, customFetch]);\r\n\r\n\tconst commentHandler = async comment => {\r\n\t\tdispatch(commentPost({ customFetch, id: singlePost._id, comment }));\r\n\t};\r\n\r\n\tif (embed) return <>{isLoading ? <PostLoading /> : <Post post={singlePost} />}</>;\r\n\r\n\treturn (\r\n\t\t<section className=\"singlepost\">\r\n\t\t\t<div className=\"singlepost__left\">\r\n\t\t\t\t{isLoading ? <PostLoading singlepost={true} /> : <Post singlepost={true} post={singlePost} />}\r\n\t\t\t\t<article className=\"singlepost__comments\">\r\n\t\t\t\t\t<Comments post={singlePost} />\r\n\t\t\t\t\t<Input placeholder=\"Write a comment...\" handler={commentHandler} showEmoji />\r\n\t\t\t\t</article>\r\n\t\t\t</div>\r\n\t\t\t<article className=\"singlepost__right gradient-border\">\r\n\t\t\t\t<Online />\r\n\t\t\t</article>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default SinglePost;\r\n"],"sourceRoot":""}